@font-face {
  font-family: 'Teko';
  src: url('../app/fonts/Teko-Regular.ttf');
}

@font-face {
  font-family: 'Poppins';
  src: url('../app/fonts/Poppins-Light.ttf');
}

@font-face {
  font-family: 'Ultra';
  src: url('../app/fonts/Ultra-Regular.ttf');
}

@font-face {
  font-family: 'Montserrat';
  src: url('../app/fonts/Montserrat-ExtraBold2.ttf');
}

@font-face {
  font-family: 'Comfortaa';
  src: url('../app/fonts/Comfortaa-Medium.ttf');
}

@font-face {
  font-family: 'NanumSquare';
  font-weight: 300;
  src: url(../app/fonts/NanumSquareR.eot);
  src: url(../app/fonts/NanumSquareR.eot?#iefix) format('embedded-opentype'),
  url(../app/fonts/NanumSquareR.woff) format('woff'),
  url(../app/fonts/NanumSquareR.ttf) format('truetype');
}

*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:root {
  --primaryColor: #4164e2;
  --secondaryColor: #3b9cff;
  --darkPurple: #4a5bee;
  --darkmodePrimaryColor: #27292d;
  --darkmodeSecondaryColor: #373a46;
  --brightBlue: #e7f3ff;
  --brightPurple: #8f93e0;
  --lightGray: #eff2f7;
  --brightGray: #d2dae6;
  --mediumGray: #b8bfcc;
  --darkGray: #85899a;
}

svg {
  fill: var(--darkmodePrimaryColor);
}

body {
  --color-text: #38373e;
  --color-background: #dce2ec;
  --color-aside-background: #c3cfdc;
  --color-main-background: #f1f5f9;
  --color-link: #4b4b4b;
  --color-link-hover: 4 b4b4b;
  --color-intro-bg: #0e0e0e;
  --modal-color-text: #27292d;
  color: var(--color-text);
  width: 100%;
  overflow-x: hidden;
  text-rendering: optimizeLegibility;
  font: 14px/1.5 'Poppins', 'Dotum';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

canvas {
  opacity: .5;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
  pointer-events: none;
}

/* Page Loader */
.js .loading::before,
.js .loading::after {
  content: '';
  position: fixed;
  z-index: 1000;
}

.js .loading::before {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--color-background);
}

.js .loading::after {
  top: 50%;
  left: 50%;
  width: 60px;
  height: 60px;
  margin: -30px 0 0 -30px;
  border-radius: 50%;
  opacity: 0.4;
  background: var(--color-link);
  animation: loaderAnim 0.7s linear infinite alternate forwards;

}

@keyframes loaderAnim {
  to {
    opacity: 1;
    transform: scale3d(0.5, 0.5, 1);
  }
}

a {
  text-decoration: none;
  color: var(--color-link);
  outline: none;
  display: flex;
  align-items: center;
}

a:hover,
a:focus {
  color: var(--color-link-hover);
  outline: none;
  text-decoration: none;
}

.js-image {
  max-width: 100%;
  display: block;
}

.loaded .js-image {
  opacity: 0;
}

.input-date {
  position: relative;
  display: flex;
  align-items: center;
}

.datepicker {
  text-indent: 2rem;
}

.datepicker + svg {
  position: absolute;
  left: .5rem;
  width: 1.8rem;
  height: 1.8rem;
  fill: #a3a6a9;
}

.container {
  padding: 0; /* bootstrap */
  width: 100%;
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  display: flex;
}

section {
  position: relative
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
}

img {
  display: block;
  width: 100%;
}

.add-input {
  width: 100%;
  margin: 0 auto;
  fill: var(--brightPurple) !important;
}

h1, h2, h3, h4, h5, p {
  margin: 0
}

small {
  font-family: 'Comfortaa', cursive;
  line-height: 1.2;
}

.active {
  opacity: 1 !important;
  visibility: visible !important;
  display: flex !important;
}

fieldset {
  border-radius: .5rem;
  border: 1px solid var(--darkPurple);
}

legend {
  text-align: center;
  color: var(--brightGray);
}

input {
  -webkit-appearance: none;
  height: auto;
  border: 0;
  padding: .5rem;
  font: 15px/1 'NanumSquare';
  background-color: white;
  outline: 0;
  box-sizing: border-box;
  border-radius: .3rem;
  position: relative;
}

input[type="password"] {
  font-family: 'Comfortaa', cursive;
}

input:focus, select:focus, button:focus {
  outline: 0;
}

input:focus, select:focus {
  border: 1px solid var(--primaryColor) !important;
}

label {
  font-weight: normal; /* bootstrap*/
  margin-bottom: 0; /* bootstrap*/
  flex: 0 0 20% !important;
  color: slategray;
}

.buttons {
  display: flex;
  flex-direction: row-reverse;
}

button {
  font-family: 'NanumSquare', sans-serif;
  display: flex;
  border: 0;
  background: var(--primaryColor);
  color: white;
  border-radius: .3rem;
  padding: .5rem 1rem;
  cursor: pointer;
  position: relative;
  user-select: none;
}

button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transition: background-color .2s;
}

button:hover::before {
  background-color: rgba(255, 255, 255, .1);
}

.btn-submit {
  background-color: var(--primaryColor);
  padding: .5rem 3rem !important;
}

.btn-cancel {
  background-color: rgba(0,0,0,.1);
  color: #333
}

.btn-modify {
  background-color: var(--secondaryColor);
  color: #333;
  width: 2rem;
  height: 2rem;
  padding: 0;
}

textarea {
  background-color: white;
  border: none;
  border-radius: .5rem;
  padding: .5rem;
  resize: none;
}

textarea:focus {
  outline: 0
}

header {
  flex: 0 0 auto;
  display: flex;
  align-content: center;
  justify-content: space-between;
  padding: 0 1rem;
  box-sizing: border-box;
}

header a {
  display: flex;
  padding: 1.5rem .5rem;
}

header .menu {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  display: flex;
  align-items: center;
  cursor: pointer;
}

header .menu a {
  font-size: 13px;
}

header .logo {
  line-height: 1;
}

main {
  flex: 1 1 auto;
  display: flex;
}

aside {
  flex-direction: column;
  transition: .0s;
}

aside ul {
  flex-direction: column;
}

aside li {
}

.flex-wrapper {
  display: flex;
}

.content {
  opacity: 0;
  flex: 1 1 auto;
  align-items: center;
  overflow-x: hidden;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  animation: fadeInOpacity .4s forwards;
  transition: .2s border-color;
}

.content-title {
  flex: 0 0 auto;
  padding: 0 1rem;
  width: 100%;
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  align-items: center;
}


.content-title .button-container button {
  padding: .6rem 1.6rem
}

.content-title h1 {
  font: normal 2rem/1 'Nanumsquare';
  flex: 1 1 auto;
}

.content .title p {
  color: #5e5c67;
  font-size: 16px;
}

.content-view {
  flex: 0 1 auto;
  padding: 1rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  max-width: 1200px;
  width: 100%;
  position: relative;
}

.content-title + .content-view {
  padding: 0 1rem 1rem 1rem;
}

.wrapper {
  flex: 1 1 auto;
  padding: 2rem;
  margin: 0 auto;
  max-width: 1200px;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
}

.input-container {
  display: flex;
  align-content: center;
  margin-bottom: 1rem;
  position: relative;
}

.input-container label {
  align-self: center;
}

.input-container input {
  flex: 1 1 auto
}

.input-container div {
  display: flex;
  align-items: center;
}

.input-container div input {
  flex: 1 1 auto;
}

.button-container {
  display: flex;
  flex-direction: row-reverse;
}

.button-container button {
  margin-left: .5rem;
}

/* Progress */

.progress-wrap {
  position: fixed;
  right: 50px;
  bottom: 50px;
  height: 46px;
  width: 46px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-content: center;
  border-radius: 50px;
  z-index: 10000;
  opacity: 0;
  visibility: hidden;
  background-color: lightsteelblue;
  transform: translateY(15px);
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
}

.progress-wrap.active-progress {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.progress-wrap svg.progress-circle path {
  stroke: white;
  stroke-width: 4;
  box-sizing: border-box;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
}

.progress-wrap svg {
  fill: white;
  align-self: center;
}


/* Pagination */

.pagination {
  margin: 2rem auto

}

.pagination ul {
  display: flex;
}

.pagination li {
  margin: 0 1rem;
  color: slategray;
  display: flex;
  align-items: center;
}

.pagination .active {
  color: #36299f;
  font-weight: bold;
}

.pagination svg {
  fill: slategray;
}


/* Checkbox */
.checkbox {
  position: relative;
}

.checkbox input {
  position: absolute;
  opacity: 0
}

.checkbox label {
  flex: 1 1 auto !important;
  color: #AAA;
  display: flex;
  align-items: center;
  position: relative;
  cursor: pointer;
  padding: 0;
  transition: .2s color;
}

.checkbox input:checked + label {
  color: #36299f;
}

.checkbox label:before {
  border-radius: 2px;
  transition: .2s;
  content: '';
  margin-right: 3px;
  width: 15px;
  height: 15px;
  background-color: white;
}

.checkbox input:checked + label:after {
  content: '';
  width: 10px;
  height: 6px;
  position: absolute;
  top: 6px;
  left: 3px;
  border: 2px solid black;
  border-top: none;
  border-right: none;
  background: transparent;
  opacity: 1;
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg);
}


/* Radio Button */
input[type="radio"] {
  position: absolute;
  opacity: 0
}

input[type="radio"] + label {
  cursor: pointer;
  margin-right: .5rem;
  user-select: none;
}

input[type="radio"] + label:before {
  content: '';
  background: #F3F6F9;
  border-radius: 100%;
  border: 1px solid #E3E6E9;
  display: inline-block;
  width: 12px;
  height: 12px;
  position: relative;
  margin-right: 3px;
  vertical-align: middle;
  transition: all .2s ease
}

input[type="radio"]:hover + label:before, input[type="radio"]:checked + label:before {
  border-color: #2869bd !important;
  background-color: #2869bd !important;
  box-shadow: inset 0 0 0 2px #DDD;
}

input[type="radio"]:focus + label:before {
  outline: none;
}

input[type="radio"]:disabled + label {
  cursor: auto
}

input[type="radio"]:disabled:checked + label:before {
  box-shadow: inset 0 0 0 2px #f4f4f4;
  border-color: #b4b4b4;
  background: #b4b4b4
}

input[type="radio"]:disabled + label:before {
  border-color: #b4b4b4;
  background: #f4f4f4
}

input[type="radio"] + label:empty:before {
  margin-right: 0
}

.input-comment {
  flex: 1 1 100% !important;
}


/*selectbox*/
.selectbox {
  position: relative;
  box-sizing: border-box;
  border-radius: .3rem;
  background-color: white;
  margin: .2rem;
  border: 1px solid #EEE;
}

select {
  display: flex;
  flex: 1 1 auto;
  -webkit-appearance: none;
  padding: .5rem 3rem .5rem .7rem;
  height: auto;
  border: 0;
  font: 15px/1.5 'NanumSquare';
  background-color: white;
  outline: 0;
  box-sizing: border-box;
  cursor: pointer;
}

select::-ms-expand {
  display: none;
}

.selectbox::before {
  content: "";
  position: absolute;
  top: 50%;
  right: 1rem;
  width: 0;
  height: 0;
  margin-top: -6px;
  border: solid black;
  border-width: 0 1px 1px 0;
  display: inline-block;
  padding: 3px;
  transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
}

/*table*/
.table {
  width: 100%;
}

.table .row {
  flex: 1 1 auto;
  display: flex;
  align-items: center;
  text-align: center;
  padding: .7rem;
  background: white;
  border-radius: .5rem;
  margin: .5rem 0;
  position: relative;
  cursor: pointer;
  animation: fadeInOpacity .8s forwards;
}

.table .row span {
  color: #5e5c67;
  align-items: center;
  display: flex;
  justify-content: center;
}

.table .th {
  border-radius: 0;
  background: transparent !important;
  padding-bottom: 0;
}

.table .th span {
  font: 12px/1.5 'Comfortaa';
  color: slategray !important;
}

.table .list {
  height: 100%;
  overflow-y: auto;
}


/* =====================================================
   Toggle buttons
   ===================================================== */
.toggle {
  display: block;
  text-align: center;
  user-select: none;
}

.toggle-checkbox {
  display: none;
}

.toggle-button {
  display: block;
  background-color: var(--brightGray);
  margin: 0 auto;
  font-size: 1.4em;
  transition: .2s;
}

.toggle-button:hover {
  cursor: pointer;
}

.toggle .toggle-button {
  position: relative;
  height: 22px;
  width: 36px;
  border-radius: 25px;
}

.toggle .toggle-feature {
  display: block;
  position: absolute;
  top: 3px;
  left: 3px;
  fill: white;
  border-radius: 50%;
  transition: .2s;
}

.toggle .toggle-checkbox:checked + .toggle-button {
  background-color: var(--brightPurple);
  fill: white;
}

.toggle .toggle-checkbox:checked + .toggle-button > * {
  left: 16px;
}

/* Toggle Checkbox */

.toggle-activation {
  flex: 1 1 100%;
  flex-direction: row-reverse;
  align-items: center;
}

.toggle-activation .toggle {
  display: flex;
  width: 40px;
  height: 80%;
}

.toggle-activation label {
  flex: 0 0 auto !important;
  margin-right: .5rem;
}

.toggle-activation .toggle-button {
  height: 20px;
  border-radius: 30px;
  flex: 0 0 100% !important;
  background-color: orangered;
}

.toggle-activation .toggle-feature {
  top: -2px;
  left: -2px;
  width: 24px;
  height: 24px;
  background-color: white;
  border-radius: 50%;
}

.toggle-activation .toggle-checkbox:checked + .toggle-button {
  background-color: lightseagreen;
}

.toggle-activation .toggle-checkbox:checked + .toggle-button > * {
  left: 16px;
}


/* =====================================================
   Modal Effect
   ===================================================== */
.modal {
  opacity: 0;
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: .5rem;
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: auto;
  transition: .25s;
  z-index: 10;
}

.modal.active {
  padding: 2rem;
  background: white;
  justify-content: space-between;
  flex-direction: column;
  width: fit-content;
  height: fit-content;
  min-width: 30vw;
  min-height: 20vh;
}

.modal.hide {
  display: none;
}

.modal .close {
  display: flex;
  justify-content: flex-end;
  cursor: pointer;
}

.modal-content {
  display: none;
  flex-direction: column;
}

.modal button {
  margin-left: .5rem;
}

.modal section {
  padding: 0 1rem 1rem 1rem;
  flex: 1 1 auto;
  overflow-y: auto;
}

.modal .title {
  padding: 1rem;
  display: flex;
  justify-content: space-between;
}

.overlay {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.5);
  visibility: hidden;
  opacity: 0;
  z-index: 5;
  transition: opacity .4s;
}


@media screen and (max-width: 768px) {
  .modal {
    padding: 1rem;
    width: 90vw;
  }
}

/* Scrollbar */
::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  border-radius: 6px;
  background-color: #eee;
}

::-webkit-scrollbar {
  width: 6px;
  height: 6px;
  background-color: #eee;
}

::-webkit-scrollbar-thumb {
  border-radius: 6px;
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3);
  background-color: #a3a6a9;
}


@keyframes fadeInOpacity {
  0% {
    opacity: 0
  }
  100% {
    opacity: 1
  }
}


/* =====================================================
   Dark mode
   ===================================================== */
.dark-mode,
.dark-mode main {
  background-color: var(--darkmodePrimaryColor) !important;
  color: white;
}

.dark-mode a {
  color: white
}

.dark-mode .button-cancel {
  background-color: var(--darkmodeTertiaryColor);
  color: white;
}

.dark-mode p, .dark-mode label {
  color: #d0d3dc !important;
}

.dark-mode input, .dark-mode select {
  background-color: #484c5a !important;
  color: white;
}

.dark-mode .selectbox::before {
  border: solid var(--secondaryColor);
  border-width: 0 1px 1px 0;
}

.dark-mode header {
  border-color: var(--darkmodeSecondaryColor) !important;
}

.dark-mode aside {
  background-color: var(--darkmodeSecondaryColor) !important;
}

.dark-mode .menu {
  background-color: var(--darkmodePrimaryColor);
  color: white;
  border-color: #393b40;
}

.dark-mode .menu a {
  color: #ccc;
  transition: .2s color;
}

.dark-mode .content .title h1 {
}

.dark-mode svg {
  fill: rgba(255, 255, 255, .3)
}

.dark-mode .table .row {
  background-color: var(--darkmodeSecondaryColor);
}

.dark-mode .table .row span {
  color: #d0d3dc;
}

.dark-mode input[type="radio"] + label:before {
  background-color: #373a46;
  border-color: var(--darkmodePrimaryColor);
}

.dark-mode input[type="radio"]:hover + label:before, .dark-mode input[type="radio"]:checked + label:before {
  box-shadow: inset 0 0 0 2px var(--darkmodePrimaryColor);
}
